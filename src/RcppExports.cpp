// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// melt_pp
arma::mat melt_pp(NumericVector myArray);
RcppExport SEXP _myutil_melt_pp(SEXP myArraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type myArray(myArraySEXP);
    rcpp_result_gen = Rcpp::wrap(melt_pp(myArray));
    return rcpp_result_gen;
END_RCPP
}
// melt_pp2
DataFrame melt_pp2(NumericVector myArray);
RcppExport SEXP _myutil_melt_pp2(SEXP myArraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type myArray(myArraySEXP);
    rcpp_result_gen = Rcpp::wrap(melt_pp2(myArray));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _myutil_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_myutil_melt_pp", (DL_FUNC) &_myutil_melt_pp, 1},
    {"_myutil_melt_pp2", (DL_FUNC) &_myutil_melt_pp2, 1},
    {"_myutil_rcpp_hello_world", (DL_FUNC) &_myutil_rcpp_hello_world, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_myutil(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
